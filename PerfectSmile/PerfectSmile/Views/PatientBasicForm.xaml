<UserControl x:Class="PerfectSmile.Views.PatientBasicForm"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:prism="http://prismlibrary.com/"
             xmlns:common="clr-namespace:PerfectSmile.Common"
             prism:ViewModelLocator.AutoWireViewModel="True"
              mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             >
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="140"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <Style  TargetType="TextBlock">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Margin" Value="5" />
            </Style>
            <Style  TargetType="TextBox">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Width" Value="200" />
                <Setter Property="Margin" Value="5" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Width" Value="200" />
                <Setter Property="MinWidth" Value="100" />
            </Style>
        </Grid.Resources>

        <TextBlock Grid.Row="1" Grid.Column="0" Margin="0" TextWrapping="Wrap" VerticalAlignment="Top"/>
        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Name}"/>
        <TextBlock Grid.Row="1" Grid.Column="0" Text="Name" />
        <TextBox Grid.Row="1" Grid.Column="1" x:Name="Name" Text="{Binding Name, Mode=TwoWay, ValidatesOnDataErrors=True,  UpdateSourceTrigger=PropertyChanged}"/>
        <TextBlock Grid.Row="2" Grid.Column="0" Text="Age" />

        <TextBox Grid.Row="2" Grid.Column="1" x:Name="Age">
            <Binding Path="Age" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                <Binding.ValidationRules>
                    <common:StringToIntValidationRule ValidationStep="RawProposedValue"/>
                </Binding.ValidationRules>

            </Binding>
        </TextBox>
        <TextBlock Grid.Row="3" Grid.Column="0" Text="Salary" />
        <TextBox Grid.Row="3" Grid.Column="1"
        		x:Name="Salary" 
        		HorizontalAlignment="Left"
        		Text="{Binding Salary, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
        		VerticalAlignment="Top" 
        		
      />
        <Button  Grid.Row="4" Grid.Column="1" Content="Save" Command="{Binding SaveCommand}" >
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Name}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Age}" Value="False"/>
                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Salary}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</UserControl>
